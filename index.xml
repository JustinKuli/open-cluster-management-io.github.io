<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Open Cluster Management</title>
    <link>http://open-cluster-management.io/</link>
    <description>Recent content on Open Cluster Management</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="http://open-cluster-management.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Releases</title>
      <link>http://open-cluster-management.io/community/releases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/community/releases/</guid>
      <description>Open Cluster Management has approximately a three to four month release cycle. The current release is v0.5.0. Continue reading to view upcoming releases:
v0.5.0, on 8th, November 2021 Open Cluster Management team is proud to annouce the release of OCM v0.5.0! We made several enhancements on APIs and addons which include:
 Support deleteOption in ManifestWork. Introduce plugin mechanism in Placement API and add resource based scheduling. ManagedClusterSet API is upgraded from v1alpha1 to v1beta1.</description>
    </item>
    
    <item>
      <title>Roadmap</title>
      <link>http://open-cluster-management.io/community/roadmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/community/roadmap/</guid>
      <description>The Open Cluster Management community uses GitHub Project to track the progress of the project.</description>
    </item>
    
    <item>
      <title>Architecture</title>
      <link>http://open-cluster-management.io/concepts/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/concepts/architecture/</guid>
      <description>This page is an overview of open cluster management.
   Overview  &amp;ldquo;Master-agent&amp;rdquo; architecture Modularity and extensibility   Concepts  Cluster registering: &amp;ldquo;double opt-in handshaking&amp;rdquo; Cluster namespace Addons   Building blocks  Registration Work Placement Application lifecycle Governance and risk Registration operator       Overview Open Cluster Management (OCM) is a powerful, modular, extensible platform for Kubernetes multi-cluster orchestration. Learning from the past failing lesson of building Kubernetes federation systems in the Kuberentes community, in OCM we will be jumping out of the legacy centric, imperative architecture of Kubefed v2 and embracing the &amp;ldquo;master-agent&amp;rdquo; architecture which is identical to the original pattern of &amp;ldquo;master-kubelet&amp;rdquo; from Kubernetes.</description>
    </item>
    
    <item>
      <title>Cluster manager</title>
      <link>http://open-cluster-management.io/getting-started/core/cluster-manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/getting-started/core/cluster-manager/</guid>
      <description>The are two ways to install the core control plane of open cluster management that includes cluster registration and manifests distribution.
   Prerequisite Install from source Install community operator from OperatorHub.io     Prerequisite Ensure kubectl and kustomize are installed.
Ensure golang is installed, if you are planning to install from the source.
Prepare one Kubernetes cluster to function as the hub. For example, use kind to create a hub cluster.</description>
    </item>
    
    <item>
      <title>Deploy Kubernetes resources to the managed clusters</title>
      <link>http://open-cluster-management.io/scenarios/deploy-kubernetes-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/scenarios/deploy-kubernetes-resources/</guid>
      <description>After bootstrapping an OCM environment of at least one managed clusters, now it&amp;rsquo;s time to begin your first journey of deploying Kubernetes resources into your managed clusters with OCM&amp;rsquo;s ManifestWork API.
Prerequisites By design, you don&amp;rsquo;t need to do any additional preparation before working on the ManifestWork API. Just in case of runnint into any unexpected failures, you can make sure your environment by checking the following conditions:
  The CRD ManifestWork is installed in the hub cluster:</description>
    </item>
    
    <item>
      <title>Extending managed clusters with custom attributes</title>
      <link>http://open-cluster-management.io/scenarios/extending-managed-clusters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/scenarios/extending-managed-clusters/</guid>
      <description>Under some cases we need a convenient way to extend OCM&amp;rsquo;s Managed Cluster data model so that our own custom multi-cluster system can easily work over the OCM&amp;rsquo;s native cluster api otherwise we will have to maintain an additional Kubernetes&amp;rsquo; CustomResourceDefinition in the project. OCM definitely supports developers to decorate the cluster api with minimal effort, and in the following content we will walk through that briefly.
The original cluster model in OCM &amp;ldquo;Managed Cluster&amp;rdquo; is designed to be a neat and light-weight placeholder resource of which the spec doesn&amp;rsquo;t require any additional information other than &amp;ldquo;whether the cluster is accepted or not&amp;rdquo; i.</description>
    </item>
    
    <item>
      <title>Klusterlet agent</title>
      <link>http://open-cluster-management.io/getting-started/core/register-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/getting-started/core/register-cluster/</guid>
      <description>After the cluster manager is installed on the hub cluster, you need to install the klusterlet agent on another cluster so that it can be registered and managed by the hub cluster.
   Prerequisite Install from source Install community operator from OperatorHub.io What is next Troubleshooting     Prerequisite Ensure kubectl and kustomize are installed.
Ensure golang is installed, if you are planning to install from the source.</description>
    </item>
    
    <item>
      <title>ManagedCluster</title>
      <link>http://open-cluster-management.io/concepts/managedcluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/concepts/managedcluster/</guid>
      <description>ManagedCluster Registration ManagedCluster is a cluster scoped API on the hub cluster to define a Kubernetes cluster registered with the hub cluster. In open-cluster-management, the cluster registration follows a double opt-in mechanism which is:
 An agent opts in to register a cluster with the hub by creating a ManagedCluster resource on the hub. The agent needs a kubeconfig with appropriate permission (bootstrap kubeconfig) to initiate the registration request An admin user on the hub opts in to explicitly accept the registration of the ManagedCluster.</description>
    </item>
    
    <item>
      <title>ManifestWork</title>
      <link>http://open-cluster-management.io/concepts/manifestwork/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/concepts/manifestwork/</guid>
      <description>What is ManifestWork ManifestWork is to define a group of Kubernetes resource on the hub to be applied to the managed cluster. In the open-cluster-management project, a ManifestWork resource must be created in the cluster namespace. A work agent implemented in work project is run on the managed cluster and monitors the ManifestWork resource in the cluster namespace on the hub cluster.
An example of ManifestWork to deploy a deployment to the managed cluster is shown in the following example.</description>
    </item>
    
    <item>
      <title>Placement</title>
      <link>http://open-cluster-management.io/concepts/placement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/concepts/placement/</guid>
      <description>Placement API is used to select a set of managed clusters in one or multiple ManagedClusterSets so that the user&amp;rsquo;s workloads can be deployed to these clusters.
Bind ManagedClusterSet to a namespace Before creating a Placement, you need to create a ManagedClusterSetBinding in a namespace to bind to a ManagedClusterSet. Then you can create a Placement in the same namespace to select the clusters in this ManagedClusterSet. Assume a ManagedClusterSet is created on the hub cluster as seen in the following examples.</description>
    </item>
    
    <item>
      <title>Add-ons</title>
      <link>http://open-cluster-management.io/concepts/addon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/concepts/addon/</guid>
      <description>What is an add-on? Open-cluster-management has a built-in mechanism named addon-framework to help developers to develop an extension based on the foundation components for the purpose of working with multiple clusters in custom cases. A typical addon should consist of two kinds of components:
  Addon Agent: A kubernetes controller in the managed cluster that manages the managed cluster for the hub admins. A typical addon agent is expected to be working by subscribing the prescriptions (e.</description>
    </item>
    
    <item>
      <title>Application lifecycle management</title>
      <link>http://open-cluster-management.io/getting-started/integration/app-lifecycle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/getting-started/integration/app-lifecycle/</guid>
      <description>After the cluster manager is installed, you could install the application management components to the hub cluster.
   Architecture Prerequisite Install via Clusteradm CLI tool Install from source What is next     Architecture  For more details, visit the multicloud-operators-subscription GitHub page.
Prerequisite You must meet the following prerequisites to install the application lifecycle management add-on:
  Ensure kubectl and kustomize are installed.
  Ensure the open-cluster-management cluster manager is installed.</description>
    </item>
    
    <item>
      <title>Cluster proxy</title>
      <link>http://open-cluster-management.io/getting-started/integration/cluster-proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/getting-started/integration/cluster-proxy/</guid>
      <description>Cluster proxy is an OCM addon providing L4 network connectivity from hub cluster to the managed clusters without any additional requirement to the managed cluster&amp;rsquo;s network infrastructure by leveraging the Kubernetes official SIG sub-project apiserver-network-proxy.
   Background  About apiserver-network-proxy   Architecture Prerequisite Installation Usage More insight  Troubleshooting Related materials       Background The original architecture of OCM allows a cluster from anywhere to be registered and managed by OCM&amp;rsquo;s control plane (i.</description>
    </item>
    
    <item>
      <title>Policy framework</title>
      <link>http://open-cluster-management.io/getting-started/integration/policy-framework/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/getting-started/integration/policy-framework/</guid>
      <description>The policy framework provides governance capability to gain visibility, and drive remediation for various security and configuration aspects to help IT administrators meet their requirements.
   Architecture Prerequisite Install from prebuilt images on Quay.io What is next     Architecture  You can find the analysis of the architectural components here   Prerequisite You must meet the following prerequisites to install the policy framework:
  Ensure kubectl and kustomize are installed.</description>
    </item>
    
    <item>
      <title>Policy controllers</title>
      <link>http://open-cluster-management.io/getting-started/integration/policy-controllers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/getting-started/integration/policy-controllers/</guid>
      <description>After policy framework is installed, you can install the policy controllers to the managed clusters.
   Prerequisite Install the configuration policy controller What is next  Placement Rule API Placement API Final steps to apply the policy   More policies     Prerequisite You must meet the following prerequisites to install the policy controllers:
  Ensure kubectl and kustomize are installed.
  Ensure Golang is installed, if you are planning to install from the source.</description>
    </item>
    
    <item>
      <title>addon-framework</title>
      <link>http://open-cluster-management.io/addon-framework/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/addon-framework/</guid>
      <description></description>
    </item>
    
    <item>
      <title>APIS</title>
      <link>http://open-cluster-management.io/api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/api/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Cluster Admin</title>
      <link>http://open-cluster-management.io/clusteradm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/clusteradm/</guid>
      <description></description>
    </item>
    
    <item>
      <title>multicloud-operators-channel</title>
      <link>http://open-cluster-management.io/multicloud-operators-channel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/multicloud-operators-channel/</guid>
      <description></description>
    </item>
    
    <item>
      <title>multicloud-operators-subscription</title>
      <link>http://open-cluster-management.io/multicloud-operators-subscription/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://open-cluster-management.io/multicloud-operators-subscription/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>